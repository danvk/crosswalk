// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Open API integration should have the expected endpoints for v3: open-api-v3 1`] = `
{
  "components": {
    "schemas": {
      "Partial_Pick_User__name___age___": {
        "additionalProperties": false,
        "properties": {
          "age": {
            "type": "number",
          },
          "name": {
            "type": "string",
          },
        },
        "type": "object",
      },
      "Pick_User__name___age__": {
        "additionalProperties": false,
        "properties": {
          "age": {
            "type": "number",
          },
          "name": {
            "type": "string",
          },
        },
        "required": [
          "age",
          "name",
        ],
        "type": "object",
      },
      "User": {
        "additionalProperties": false,
        "properties": {
          "age": {
            "type": "number",
          },
          "id": {
            "type": "string",
          },
          "name": {
            "type": "string",
          },
          "suffix": {
            "type": "string",
          },
        },
        "required": [
          "age",
          "id",
          "name",
        ],
        "type": "object",
      },
    },
  },
  "info": {
    "description": "testing testing",
    "title": "Generated API",
    "version": "",
  },
  "openapi": "3.0.0",
  "paths": {
    "/complex": {
      "patch": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "age": {
                    "type": "number",
                  },
                  "id": {
                    "type": "string",
                  },
                  "name": {
                    "type": "string",
                  },
                },
                "required": [
                  "age",
                  "id",
                  "name",
                ],
                "type": "object",
              },
            },
          },
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User",
                },
              },
            },
            "description": "Successful response",
          },
        },
        "summary": undefined,
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "user": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/User",
                      },
                      {
                        "nullable": true,
                        "type": "object",
                      },
                    ],
                  },
                },
                "required": [
                  "user",
                ],
                "type": "object",
              },
            },
          },
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User",
                },
              },
            },
            "description": "Successful response",
          },
        },
        "summary": undefined,
      },
    },
    "/random": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "random": {
                      "type": "number",
                    },
                  },
                  "required": [
                    "random",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Successful response",
          },
        },
        "summary": "Get a random number",
      },
    },
    "/users": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "minAge",
            "schema": {
              "type": "number",
            },
          },
          {
            "in": "query",
            "name": "nameIncludes",
            "schema": {
              "type": "string",
            },
          },
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "users": {
                      "items": {
                        "$ref": "#/components/schemas/User",
                      },
                      "type": "array",
                    },
                  },
                  "required": [
                    "users",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Successful response",
          },
        },
        "summary": "Get the full list of users",
      },
      "post": {
        "parameters": [
          {
            "in": "query",
            "name": "nameIncludes",
            "schema": {
              "type": "string",
            },
          },
          {
            "in": "query",
            "name": "suffix",
            "schema": {
              "type": "string",
            },
          },
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Pick_User__name___age__",
              },
            },
          },
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User",
                },
              },
            },
            "description": "Successful response",
          },
        },
        "summary": "Create a new user",
      },
    },
    "/users/{userId}": {
      "delete": {
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string",
            },
          },
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User",
                },
              },
            },
            "description": "Successful response",
          },
        },
        "summary": undefined,
      },
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string",
            },
          },
          {
            "in": "query",
            "name": "firstName",
            "schema": {
              "type": "string",
            },
          },
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User",
                },
              },
            },
            "description": "Successful response",
          },
        },
        "summary": undefined,
      },
      "patch": {
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string",
            },
          },
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Partial_Pick_User__name___age___",
              },
            },
          },
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User",
                },
              },
            },
            "description": "Successful response",
          },
        },
        "summary": "Edit an existing user",
      },
      "put": {
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string",
            },
          },
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "age": {
                    "type": "number",
                  },
                  "name": {
                    "type": "string",
                  },
                },
                "type": "object",
              },
            },
          },
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User",
                },
              },
            },
            "description": "Successful response",
          },
        },
        "summary": undefined,
      },
    },
  },
}
`;

exports[`Open API integration should have the expected endpoints: open-api 1`] = `
{
  "definitions": {
    "Partial<Pick<User,"name"|"age">>": {
      "additionalProperties": false,
      "properties": {
        "age": {
          "type": "number",
        },
        "name": {
          "type": "string",
        },
      },
      "type": "object",
    },
    "Pick<User,"name"|"age">": {
      "additionalProperties": false,
      "properties": {
        "age": {
          "type": "number",
        },
        "name": {
          "type": "string",
        },
      },
      "required": [
        "age",
        "name",
      ],
      "type": "object",
    },
    "User": {
      "additionalProperties": false,
      "properties": {
        "age": {
          "type": "number",
        },
        "id": {
          "type": "string",
        },
        "name": {
          "type": "string",
        },
        "suffix": {
          "type": "string",
        },
      },
      "required": [
        "age",
        "id",
        "name",
      ],
      "type": "object",
    },
  },
  "info": {
    "description": "testing testing",
    "title": "Generated API",
    "version": "",
  },
  "paths": {
    "/complex": {
      "patch": {
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "additionalProperties": false,
              "properties": {
                "age": {
                  "type": "number",
                },
                "id": {
                  "type": "string",
                },
                "name": {
                  "type": "string",
                },
              },
              "required": [
                "age",
                "id",
                "name",
              ],
              "type": "object",
            },
          },
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/User",
            },
          },
        },
        "summary": undefined,
      },
      "post": {
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "additionalProperties": false,
              "properties": {
                "user": {
                  "anyOf": [
                    {
                      "$ref": "#/definitions/User",
                    },
                    {
                      "type": "null",
                    },
                  ],
                },
              },
              "required": [
                "user",
              ],
              "type": "object",
            },
          },
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/User",
            },
          },
        },
        "summary": undefined,
      },
    },
    "/random": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "additionalProperties": false,
              "properties": {
                "random": {
                  "type": "number",
                },
              },
              "required": [
                "random",
              ],
              "type": "object",
            },
          },
        },
        "summary": "Get a random number",
      },
    },
    "/users": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "minAge",
            "schema": {
              "type": "number",
            },
          },
          {
            "in": "query",
            "name": "nameIncludes",
            "schema": {
              "type": "string",
            },
          },
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "additionalProperties": false,
              "properties": {
                "users": {
                  "items": {
                    "$ref": "#/definitions/User",
                  },
                  "type": "array",
                },
              },
              "required": [
                "users",
              ],
              "type": "object",
            },
          },
        },
        "summary": "Get the full list of users",
      },
      "post": {
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Pick<User,"name"|"age">",
            },
          },
          {
            "in": "query",
            "name": "nameIncludes",
            "schema": {
              "type": "string",
            },
          },
          {
            "in": "query",
            "name": "suffix",
            "schema": {
              "type": "string",
            },
          },
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/User",
            },
          },
        },
        "summary": "Create a new user",
      },
    },
    "/users/{userId}": {
      "delete": {
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "type": "string",
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {},
              "type": "object",
            },
          },
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/User",
            },
          },
        },
        "summary": undefined,
      },
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "type": "string",
          },
          {
            "in": "query",
            "name": "firstName",
            "schema": {
              "type": "string",
            },
          },
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/User",
            },
          },
        },
        "summary": undefined,
      },
      "patch": {
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "type": "string",
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Partial<Pick<User,"name"|"age">>",
            },
          },
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/User",
            },
          },
        },
        "summary": "Edit an existing user",
      },
      "put": {
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "type": "string",
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "additionalProperties": false,
              "properties": {
                "age": {
                  "type": "number",
                },
                "name": {
                  "type": "string",
                },
              },
              "type": "object",
            },
          },
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/User",
            },
          },
        },
        "summary": undefined,
      },
    },
  },
  "swagger": "2.0",
}
`;
