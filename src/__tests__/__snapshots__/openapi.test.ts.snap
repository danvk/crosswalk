// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Open API V3 should have the expected endpoints: open-api-v3 1`] = `
{
  "components": {
    "schemas": {
      "Address": {
        "additionalProperties": false,
        "properties": {
          "city": {
            "type": "string",
          },
          "location": {
            "$ref": "#/components/schemas/Location",
          },
          "state": {
            "type": "string",
          },
          "street": {
            "type": "string",
          },
          "zip": {
            "type": "string",
          },
        },
        "required": [
          "street",
          "city",
          "state",
          "zip",
          "location",
        ],
        "type": "object",
      },
      "CreateUserRequest": {
        "additionalProperties": false,
        "properties": {
          "age": {
            "type": "number",
          },
          "name": {
            "type": "string",
          },
          "permanentAddress": {
            "$ref": "#/components/schemas/Address",
          },
          "phoneNumbers": {
            "items": {
              "$ref": "#/components/schemas/PhoneNumber",
            },
            "type": "array",
          },
        },
        "required": [
          "name",
          "age",
          "phoneNumbers",
          "permanentAddress",
        ],
        "type": "object",
      },
      "File": {
        "additionalProperties": false,
        "description": "File upload field",
        "properties": {
          "__type": {
            "enum": [
              "file",
            ],
            "type": "string",
          },
        },
        "required": [
          "__type",
        ],
        "type": "object",
      },
      "FileUpload": {
        "additionalProperties": false,
        "properties": {
          "file": {
            "$ref": "#/components/schemas/File",
          },
          "source": {
            "type": "string",
          },
        },
        "required": [
          "source",
          "file",
        ],
        "type": "object",
      },
      "Location": {
        "additionalProperties": false,
        "properties": {
          "latitude": {
            "type": "number",
          },
          "longitude": {
            "type": "number",
          },
        },
        "required": [
          "latitude",
          "longitude",
        ],
        "type": "object",
      },
      "PhoneNumber": {
        "additionalProperties": false,
        "properties": {
          "number": {
            "type": "string",
          },
          "type": {
            "enum": [
              "home",
              "work",
              "mobile",
              null,
            ],
            "nullable": true,
            "type": "string",
          },
        },
        "required": [
          "number",
          "type",
        ],
        "type": "object",
      },
      "QueryParams": {
        "additionalProperties": false,
        "properties": {
          "createdAt": {
            "type": "string",
          },
        },
        "type": "object",
      },
      "TypeWithEmptyLiteral": {
        "additionalProperties": false,
        "properties": {
          "complexEmptyUnion": {
            "anyOf": [
              {
                "enum": [
                  "",
                ],
                "nullable": true,
                "type": "string",
              },
              {
                "additionalProperties": false,
                "nullable": true,
                "type": "object",
              },
              {
                "items": {},
                "maxItems": 0,
                "minItems": 0,
                "nullable": true,
                "type": "array",
              },
              {
                "enum": [
                  false,
                ],
                "nullable": true,
                "type": "boolean",
              },
              {
                "enum": [
                  0,
                ],
                "nullable": true,
                "type": "number",
              },
            ],
          },
          "emptyArray": {
            "items": {},
            "maxItems": 0,
            "minItems": 0,
            "type": "array",
          },
          "emptyBool": {
            "enum": [
              false,
            ],
            "type": "boolean",
          },
          "emptyNum": {
            "enum": [
              0,
            ],
            "type": "number",
          },
          "emptyObj": {
            "additionalProperties": false,
            "type": "object",
          },
          "emptyStr": {
            "enum": [
              "",
            ],
            "type": "string",
          },
          "null": {
            "nullable": true,
          },
        },
        "required": [
          "emptyStr",
          "emptyObj",
          "emptyArray",
          "emptyBool",
          "emptyNum",
          "null",
          "complexEmptyUnion",
        ],
        "type": "object",
      },
      "User": {
        "additionalProperties": false,
        "properties": {
          "age": {
            "type": "number",
          },
          "fromSystem": {
            "enum": [
              "google",
              null,
            ],
            "nullable": true,
            "type": "string",
          },
          "id": {
            "type": "string",
          },
          "name": {
            "type": "string",
          },
          "permanentAddress": {
            "$ref": "#/components/schemas/Address",
          },
          "phoneNumbers": {
            "items": {
              "$ref": "#/components/schemas/PhoneNumber",
            },
            "type": "array",
          },
          "role": {
            "enum": [
              "user",
            ],
            "type": "string",
          },
          "signupMethod": {
            "enum": [
              "email",
            ],
            "type": "string",
          },
          "suffix": {
            "type": "string",
          },
        },
        "required": [
          "id",
          "name",
          "age",
          "phoneNumbers",
          "permanentAddress",
          "role",
        ],
        "type": "object",
      },
    },
  },
  "info": {
    "description": "testing testing",
    "title": "Generated API",
    "version": "",
  },
  "openapi": "3.0.0",
  "paths": {
    "/complex": {
      "patch": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "age": {
                    "type": "number",
                  },
                  "id": {
                    "type": "string",
                  },
                  "name": {
                    "type": "string",
                  },
                  "permanentAddress": {
                    "$ref": "#/components/schemas/Address",
                  },
                  "phoneNumbers": {
                    "items": {
                      "$ref": "#/components/schemas/PhoneNumber",
                    },
                    "type": "array",
                  },
                },
                "required": [
                  "age",
                  "id",
                  "name",
                  "permanentAddress",
                  "phoneNumbers",
                ],
                "type": "object",
              },
            },
          },
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User",
                },
              },
            },
            "description": "Successful response",
          },
        },
        "summary": undefined,
      },
      "post": {
        "parameters": [
          {
            "in": "query",
            "name": "createdAt",
            "schema": {
              "type": "string",
            },
          },
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "user": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/User",
                        "nullable": true,
                      },
                    ],
                  },
                },
                "required": [
                  "user",
                ],
                "type": "object",
              },
            },
          },
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User",
                },
              },
            },
            "description": "Successful response",
          },
        },
        "summary": undefined,
      },
    },
    "/empty-literals": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TypeWithEmptyLiteral",
              },
            },
          },
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TypeWithEmptyLiteral",
                },
              },
            },
            "description": "Successful response",
          },
        },
        "summary": undefined,
      },
    },
    "/random": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "random": {
                      "type": "number",
                    },
                  },
                  "required": [
                    "random",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Successful response",
          },
        },
        "summary": "Get a random number",
      },
    },
    "/search": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "numResults",
            "schema": {
              "type": "number",
            },
          },
          {
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string",
            },
          },
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "users": {
                      "items": {
                        "$ref": "#/components/schemas/User",
                      },
                      "type": "array",
                    },
                  },
                  "required": [
                    "users",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Successful response",
          },
        },
        "summary": undefined,
      },
    },
    "/upload": {
      "post": {
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "file": {
                    "format": "binary",
                    "type": "string",
                  },
                  "source": {
                    "type": "string",
                  },
                },
                "required": [
                  "source",
                  "file",
                ],
                "type": "object",
              },
            },
          },
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "filename": {
                      "type": "string",
                    },
                    "size": {
                      "type": "number",
                    },
                    "success": {
                      "type": "boolean",
                    },
                  },
                  "required": [
                    "success",
                    "filename",
                    "size",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Successful response",
          },
        },
        "summary": "Upload a single file",
      },
    },
    "/users": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "minAge",
            "schema": {
              "type": "number",
            },
          },
          {
            "in": "query",
            "name": "nameIncludes",
            "schema": {
              "type": "string",
            },
          },
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "users": {
                      "items": {
                        "$ref": "#/components/schemas/User",
                      },
                      "type": "array",
                    },
                  },
                  "required": [
                    "users",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Successful response",
          },
        },
        "summary": "Get the full list of users",
      },
      "post": {
        "parameters": [
          {
            "in": "query",
            "name": "nameIncludes",
            "schema": {
              "type": "string",
            },
          },
          {
            "in": "query",
            "name": "suffix",
            "schema": {
              "type": "string",
            },
          },
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserRequest",
              },
            },
          },
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User",
                },
              },
            },
            "description": "Successful response",
          },
        },
        "summary": "Create a new user",
      },
    },
    "/users/{userId}": {
      "delete": {
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string",
            },
          },
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User",
                },
              },
            },
            "description": "Successful response",
          },
        },
        "summary": undefined,
      },
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string",
            },
          },
          {
            "in": "query",
            "name": "firstName",
            "schema": {
              "type": "string",
            },
          },
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User",
                },
              },
            },
            "description": "Successful response",
          },
        },
        "summary": undefined,
      },
      "patch": {
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string",
            },
          },
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "age": {
                    "type": "number",
                  },
                  "name": {
                    "type": "string",
                  },
                  "permanentAddress": {
                    "$ref": "#/components/schemas/Address",
                  },
                  "phoneNumbers": {
                    "items": {
                      "$ref": "#/components/schemas/PhoneNumber",
                    },
                    "type": "array",
                  },
                },
                "type": "object",
              },
            },
          },
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User",
                },
              },
            },
            "description": "Successful response",
          },
        },
        "summary": "Edit an existing user",
      },
      "put": {
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string",
            },
          },
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "age": {
                    "type": "number",
                  },
                  "name": {
                    "type": "string",
                  },
                  "permanentAddress": {
                    "$ref": "#/components/schemas/Address",
                  },
                  "phoneNumbers": {
                    "items": {
                      "$ref": "#/components/schemas/PhoneNumber",
                    },
                    "type": "array",
                  },
                },
                "type": "object",
              },
            },
          },
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User",
                },
              },
            },
            "description": "Successful response",
          },
        },
        "summary": undefined,
      },
    },
    "/void-response": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "type": "object",
              },
            },
          },
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {},
              },
            },
            "description": "Successful response",
          },
        },
        "summary": undefined,
      },
    },
  },
}
`;

exports[`Open API integration should have the expected endpoints: open-api 1`] = `
{
  "definitions": {
    "Address": {
      "additionalProperties": false,
      "properties": {
        "city": {
          "type": "string",
        },
        "location": {
          "$ref": "#/definitions/Location",
        },
        "state": {
          "type": "string",
        },
        "street": {
          "type": "string",
        },
        "zip": {
          "type": "string",
        },
      },
      "required": [
        "street",
        "city",
        "state",
        "zip",
        "location",
      ],
      "type": "object",
    },
    "CreateUserRequest": {
      "additionalProperties": false,
      "properties": {
        "age": {
          "type": "number",
        },
        "name": {
          "type": "string",
        },
        "permanentAddress": {
          "$ref": "#/definitions/Address",
        },
        "phoneNumbers": {
          "items": {
            "$ref": "#/definitions/PhoneNumber",
          },
          "type": "array",
        },
      },
      "required": [
        "name",
        "age",
        "phoneNumbers",
        "permanentAddress",
      ],
      "type": "object",
    },
    "File": {
      "additionalProperties": false,
      "description": "File upload field",
      "properties": {
        "__type": {
          "const": "file",
          "type": "string",
        },
      },
      "required": [
        "__type",
      ],
      "type": "object",
    },
    "FileUpload": {
      "additionalProperties": false,
      "properties": {
        "file": {
          "$ref": "#/definitions/File",
        },
        "source": {
          "type": "string",
        },
      },
      "required": [
        "source",
        "file",
      ],
      "type": "object",
    },
    "Location": {
      "additionalProperties": false,
      "properties": {
        "latitude": {
          "type": "number",
        },
        "longitude": {
          "type": "number",
        },
      },
      "required": [
        "latitude",
        "longitude",
      ],
      "type": "object",
    },
    "PhoneNumber": {
      "additionalProperties": false,
      "properties": {
        "number": {
          "type": "string",
        },
        "type": {
          "enum": [
            "home",
            "work",
            "mobile",
            null,
          ],
          "type": [
            "string",
            "null",
          ],
        },
      },
      "required": [
        "number",
        "type",
      ],
      "type": "object",
    },
    "QueryParams": {
      "additionalProperties": false,
      "properties": {
        "createdAt": {
          "type": "string",
        },
      },
      "type": "object",
    },
    "TypeWithEmptyLiteral": {
      "additionalProperties": false,
      "properties": {
        "complexEmptyUnion": {
          "anyOf": [
            {
              "type": "null",
            },
            {
              "const": "",
              "type": "string",
            },
            {
              "additionalProperties": false,
              "type": "object",
            },
            {
              "maxItems": 0,
              "minItems": 0,
              "type": "array",
            },
            {
              "const": false,
              "type": "boolean",
            },
            {
              "const": 0,
              "type": "number",
            },
          ],
        },
        "emptyArray": {
          "maxItems": 0,
          "minItems": 0,
          "type": "array",
        },
        "emptyBool": {
          "const": false,
          "type": "boolean",
        },
        "emptyNum": {
          "const": 0,
          "type": "number",
        },
        "emptyObj": {
          "additionalProperties": false,
          "type": "object",
        },
        "emptyStr": {
          "const": "",
          "type": "string",
        },
        "null": {
          "type": "null",
        },
      },
      "required": [
        "emptyStr",
        "emptyObj",
        "emptyArray",
        "emptyBool",
        "emptyNum",
        "null",
        "complexEmptyUnion",
      ],
      "type": "object",
    },
    "User": {
      "additionalProperties": false,
      "properties": {
        "age": {
          "type": "number",
        },
        "fromSystem": {
          "enum": [
            "google",
            null,
          ],
          "type": [
            "string",
            "null",
          ],
        },
        "id": {
          "type": "string",
        },
        "name": {
          "type": "string",
        },
        "permanentAddress": {
          "$ref": "#/definitions/Address",
        },
        "phoneNumbers": {
          "items": {
            "$ref": "#/definitions/PhoneNumber",
          },
          "type": "array",
        },
        "role": {
          "const": "user",
          "type": "string",
        },
        "signupMethod": {
          "const": "email",
          "type": "string",
        },
        "suffix": {
          "type": "string",
        },
      },
      "required": [
        "id",
        "name",
        "age",
        "phoneNumbers",
        "permanentAddress",
        "role",
      ],
      "type": "object",
    },
  },
  "info": {
    "description": "testing testing",
    "title": "Generated API",
    "version": "",
  },
  "paths": {
    "/complex": {
      "patch": {
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "additionalProperties": false,
              "properties": {
                "age": {
                  "type": "number",
                },
                "id": {
                  "type": "string",
                },
                "name": {
                  "type": "string",
                },
                "permanentAddress": {
                  "$ref": "#/definitions/Address",
                },
                "phoneNumbers": {
                  "items": {
                    "$ref": "#/definitions/PhoneNumber",
                  },
                  "type": "array",
                },
              },
              "required": [
                "age",
                "id",
                "name",
                "permanentAddress",
                "phoneNumbers",
              ],
              "type": "object",
            },
          },
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/User",
            },
          },
        },
        "summary": undefined,
      },
      "post": {
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "additionalProperties": false,
              "properties": {
                "user": {
                  "anyOf": [
                    {
                      "$ref": "#/definitions/User",
                    },
                    {
                      "type": "null",
                    },
                  ],
                },
              },
              "required": [
                "user",
              ],
              "type": "object",
            },
          },
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/User",
            },
          },
        },
        "summary": undefined,
      },
    },
    "/empty-literals": {
      "post": {
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/TypeWithEmptyLiteral",
            },
          },
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/TypeWithEmptyLiteral",
            },
          },
        },
        "summary": undefined,
      },
    },
    "/random": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "additionalProperties": false,
              "properties": {
                "random": {
                  "type": "number",
                },
              },
              "required": [
                "random",
              ],
              "type": "object",
            },
          },
        },
        "summary": "Get a random number",
      },
    },
    "/search": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "numResults",
            "schema": {
              "type": "number",
            },
          },
          {
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string",
            },
          },
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "additionalProperties": false,
              "properties": {
                "users": {
                  "items": {
                    "$ref": "#/definitions/User",
                  },
                  "type": "array",
                },
              },
              "required": [
                "users",
              ],
              "type": "object",
            },
          },
        },
        "summary": undefined,
      },
    },
    "/upload": {
      "post": {
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/FileUpload",
            },
          },
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "additionalProperties": false,
              "properties": {
                "filename": {
                  "type": "string",
                },
                "size": {
                  "type": "number",
                },
                "success": {
                  "type": "boolean",
                },
              },
              "required": [
                "success",
                "filename",
                "size",
              ],
              "type": "object",
            },
          },
        },
        "summary": "Upload a single file",
      },
    },
    "/users": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "minAge",
            "schema": {
              "type": "number",
            },
          },
          {
            "in": "query",
            "name": "nameIncludes",
            "schema": {
              "type": "string",
            },
          },
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "additionalProperties": false,
              "properties": {
                "users": {
                  "items": {
                    "$ref": "#/definitions/User",
                  },
                  "type": "array",
                },
              },
              "required": [
                "users",
              ],
              "type": "object",
            },
          },
        },
        "summary": "Get the full list of users",
      },
      "post": {
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CreateUserRequest",
            },
          },
          {
            "in": "query",
            "name": "nameIncludes",
            "schema": {
              "type": "string",
            },
          },
          {
            "in": "query",
            "name": "suffix",
            "schema": {
              "type": "string",
            },
          },
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/User",
            },
          },
        },
        "summary": "Create a new user",
      },
    },
    "/users/{userId}": {
      "delete": {
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "type": "string",
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "additionalProperties": false,
              "type": "object",
            },
          },
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/User",
            },
          },
        },
        "summary": undefined,
      },
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "type": "string",
          },
          {
            "in": "query",
            "name": "firstName",
            "schema": {
              "type": "string",
            },
          },
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/User",
            },
          },
        },
        "summary": undefined,
      },
      "patch": {
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "type": "string",
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "additionalProperties": false,
              "properties": {
                "age": {
                  "type": "number",
                },
                "name": {
                  "type": "string",
                },
                "permanentAddress": {
                  "$ref": "#/definitions/Address",
                },
                "phoneNumbers": {
                  "items": {
                    "$ref": "#/definitions/PhoneNumber",
                  },
                  "type": "array",
                },
              },
              "type": "object",
            },
          },
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/User",
            },
          },
        },
        "summary": "Edit an existing user",
      },
      "put": {
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "type": "string",
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "additionalProperties": false,
              "properties": {
                "age": {
                  "type": "number",
                },
                "name": {
                  "type": "string",
                },
                "permanentAddress": {
                  "$ref": "#/definitions/Address",
                },
                "phoneNumbers": {
                  "items": {
                    "$ref": "#/definitions/PhoneNumber",
                  },
                  "type": "array",
                },
              },
              "type": "object",
            },
          },
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/User",
            },
          },
        },
        "summary": undefined,
      },
    },
    "/void-response": {
      "post": {
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "additionalProperties": false,
              "type": "object",
            },
          },
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "type": "null",
            },
          },
        },
        "summary": undefined,
      },
    },
  },
  "swagger": "2.0",
  "version": "2.0",
}
`;
